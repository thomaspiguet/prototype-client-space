{"version":3,"file":"card.component.js","sourceRoot":"","sources":["../../../../build/src/app/card/basic-card/card.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\nimport { CardAction } from '../card-action/card-action';\nimport { CardBase } from '../card-base';\nimport { CardConfig } from './card-config';\nimport { CardFilter } from '../card-filter/card-filter';\nimport { CardFilterPosition } from '../card-filter/card-filter-position';\n\n/**\n * Card component\n *\n * For customization, use the templates named headerTemplate and footerTemplate.\n *\n * Usage:\n * <br/><code>import { BasicCardModule } from 'patternfly-ng/card';</code>\n *\n * Or:\n * <br/><code>import { BasicCardModule } from 'patternfly-ng';</code>\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-card',\n  template: `<div class=\"pfng-card card-pf\" [ngClass]=\"{'card-pf-accented': config?.topBorder, 'pfng-card-no-padding': config.noPadding}\"><div [ngClass]=\"config?.titleBorder ? 'card-pf-heading' : 'pfng-card-heading-no-bottom'\" *ngIf=\"showHeader\"><div *ngIf=\"headerTemplate; then showHeaderTemplate else showHeader\"></div><ng-template #showHeaderTemplate><ng-template [ngTemplateOutlet]=\"headerTemplate\"></ng-template></ng-template><ng-template #showHeader><div *ngIf=\"showFilterInHeader\"><pfng-card-filter [filters]=\"config?.filters\" (onFilterSelect)=\"handleFilterSelect($event)\"></pfng-card-filter></div><h2 class=\"card-pf-title\">{{config?.title}}</h2></ng-template></div><span *ngIf=\"config?.subTitle\" class=\"card-pf-subtitle\">{{config?.subTitle}}</span><div class=\"card-pf-body\"><ng-content></ng-content></div><div class=\"card-pf-footer\" *ngIf=\"showFooter\"><div *ngIf=\"footerTemplate; then showFooterTemplate else showFooter\"></div><ng-template #showFooterTemplate><ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template></ng-template><ng-template #showFooter><div *ngIf=\"showFilterInFooter\"><pfng-card-filter [filters]=\"config?.filters\" (onFilterSelect)=\"handleFilterSelect($event)\"></pfng-card-filter></div><p><pfng-card-action [action]=\"config?.action\" (onActionSelect)=\"handleActionSelect($event)\"></pfng-card-action></p></ng-template></div></div>`\n})\nexport class CardComponent extends CardBase implements DoCheck, OnInit {\n  /**\n   * The card config containing component properties\n   */\n  @Input() config: CardConfig;\n\n  /**\n   * The event emitted when an action is selected\n   */\n  @Output('onActionSelect') onActionSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a filter is selected\n   */\n  @Output('onFilterSelect') onFilterSelect = new EventEmitter();\n\n  private defaultConfig = {\n    filterPosition: CardFilterPosition.FOOTER,\n    noPadding: false,\n    titleBorder: true,\n    topBorder: true\n  } as CardConfig;\n  private prevConfig: CardConfig;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n    super();\n  }\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  // Actions\n\n  /**\n   * Handle the event emitted when an action is selected\n   *\n   * @param {CardAction} $event The emitted CardAction object\n   */\n  protected handleActionSelect($event: CardAction): void {\n    this.onActionSelect.emit($event);\n  }\n\n  /**\n   * Handle the event emitted when a filter is selected\n   *\n   * @param {CardFilter} $event The emitted CardFilter object\n   */\n  protected handleFilterSelect($event: CardFilter): void {\n    this.onFilterSelect.emit($event);\n  }\n\n  // Accessors\n\n  /**\n   * Indicates that the footer should be shown in the footer\n   *\n   * @returns {boolean} True if the footer should be shown in the footer\n   */\n  protected get showFilterInFooter(): boolean {\n    return (this.config.filters && this.config.filterPosition\n      && this.config.filterPosition === CardFilterPosition.FOOTER);\n  }\n\n  /**\n   * Indicates that the footer should be shown in the header\n   *\n   * @returns {boolean} True if the footer should be shown in the header\n   */\n  protected get showFilterInHeader(): boolean {\n    return (this.config.filters && this.config.filterPosition\n      && this.config.filterPosition === CardFilterPosition.HEADER);\n  }\n\n  /**\n   * Indicates that the footer should be shown\n   *\n   * @returns {boolean} True if the footer should be shown\n   */\n  get showFooter(): boolean {\n    return (this.footerTemplate !== undefined || this.showFilterInFooter || this.config.action !== undefined);\n  }\n\n  /**\n   * Indicates that the header should be shown\n   *\n   * @returns {boolean} True if the header should be shown\n   */\n  get showHeader(): boolean {\n    return (this.headerTemplate !== undefined || this.showFilterInHeader || this.config.title !== undefined);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}