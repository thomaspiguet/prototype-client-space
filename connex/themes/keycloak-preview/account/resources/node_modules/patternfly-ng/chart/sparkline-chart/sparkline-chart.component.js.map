{"version":3,"file":"sparkline-chart.component.js","sourceRoot":"","sources":["../../../../build/src/app/chart/sparkline-chart/sparkline-chart.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  Input,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { cloneDeep, defaultsDeep, isEqual, merge, uniqueId } from 'lodash';\n\nimport { ChartBase } from '../chart-base';\nimport { ChartDefaults } from '../chart-defaults';\nimport { SparklineChartConfig } from './sparkline-chart-config';\nimport { SparklineChartData } from './sparkline-chart-data';\n\n/**\n * Sparkline chart component\n *\n * Note: In order to use charts, please include the following JavaScript file from patternfly. For example:\n * <br/><code>require('patternfly/dist/js/patternfly-settings');</code>\n *\n * Usage:\n * <br/><code>import { SparklineChartModule } from 'patternfly-ng/chart';</code>\n *\n * Or:\n * <br/><code>import { SparklineChartModule } from 'patternfly-ng';</code>\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-sparkline-chart',\n  template: `<div #chartElement id=\"{{config.chartId}}\"></div>`\n})\nexport class SparklineChartComponent extends ChartBase implements DoCheck, OnInit {\n  /**\n   * Chart data\n   */\n  @Input() chartData: SparklineChartData;\n\n  /**\n   * Configuration object containing details about how to render the chart\n   */\n  @Input() config: SparklineChartConfig;\n\n  private defaultConfig: SparklineChartConfig;\n  private prevChartData: SparklineChartData;\n  private prevConfig: SparklineChartConfig;\n\n  /**\n   * Default constructor\n   * @param chartDefaults\n   */\n  constructor(private chartDefaults: ChartDefaults) {\n    super();\n  }\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfigDefaults();\n    this.setupConfig();\n    this.generateChart(this.config, true);\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    const dataChanged = !isEqual(this.chartData, this.prevChartData);\n    if (dataChanged || !isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n      this.generateChart(this.config, !dataChanged);\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaultsDeep(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n\n    /*\n     * Setup Axis options. Default is to not show either axis. This can be overridden in two ways:\n     *   1) in the config, setting showAxis to true will show both axes\n     *   2) in the attributes showXAxis and showYAxis will override the config if set\n     *\n     * By default only line and the tick marks are shown, no labels. This is a sparkline and should be used\n     * only to show a brief idea of trending. This can be overridden by setting the config.axis options per C3\n     */\n    if (this.config.axis !== undefined) {\n      this.config.axis.x.show = this.config.showXAxis === true;\n      this.config.axis.y.show = this.config.showYAxis === true;\n    }\n    if (this.config.chartHeight !== undefined) {\n      this.config.size.height = this.config.chartHeight;\n    }\n    this.config.data = merge(this.config.data, this.getChartData());\n    this.prevConfig = cloneDeep(this.config);\n    this.prevChartData = cloneDeep(this.chartData);\n  }\n\n  /**\n   * Set up config defaults\n   */\n  protected setupConfigDefaults(): void {\n    this.defaultConfig = this.chartDefaults.getDefaultSparklineConfig();\n\n    this.defaultConfig.axis = {\n      x: {\n        show: this.config.showXAxis === true,\n        type: 'timeseries',\n        tick: {\n          format: () => {\n            return ''; // change to lambda ?\n          }\n        }\n      },\n      y: {\n        show: this.config.showYAxis === true,\n        tick: {\n          format: () => {\n            return ''; // change to lambda ?\n          }\n        }\n      }\n    };\n    this.defaultConfig.chartId = uniqueId(this.config.chartId);\n    this.defaultConfig.data = { type: 'area' };\n    this.defaultConfig.tooltip = this.tooltip();\n    this.defaultConfig.units = '';\n  }\n\n  // Chart\n\n  /**\n   * Convert chartData to C3 data property\n   */\n  protected getChartData(): any {\n    let data: any = {};\n\n    if (this.chartData && this.chartData.dataAvailable !== false && this.chartData.xData && this.chartData.yData) {\n      data.x = this.chartData.xData[0];\n      data.columns = [\n        this.chartData.xData,\n        this.chartData.yData\n      ];\n    }\n    return data;\n  }\n\n  /**\n   * Tooltip function for sparklines\n   *\n   * @returns {{contents: ((d:any)=>string), position: ((data:any, width:number,\n   *            height:number, element:any)=>{top: number, left: number})}}\n   */\n  tooltip(): any {\n    return {\n      contents: (d: any) => {\n        let tipRows;\n        let percentUsed = 0;\n\n        switch (this.config.tooltipType) {\n          case 'usagePerDay':\n            if (this.chartData.dataAvailable !== false && this.chartData.total > 0) {\n              percentUsed = Math.round(d[0].value / this.chartData.total * 100.0);\n            }\n            tipRows =\n              '<tr>' +\n              '  <th colspan=\"2\">' + d[0].x.toLocaleDateString() + '</th>' +\n              '</tr>' +\n              '<tr>' +\n              '  <td class=\"name\">' + percentUsed + '%:' + '</td>' +\n              '  <td class=\"value text-nowrap\">' + d[0].value + ' '\n              + (this.config.units ? this.config.units + ' ' : '') + d[0].name + '</td>' +\n              '</tr>';\n            break;\n          case 'valuePerDay':\n            tipRows =\n              '<tr>' +\n              '  <td class=\"value\">' + d[0].x.toLocaleDateString() + '</td>' +\n              '  <td class=\"value text-nowrap\">' + d[0].value + ' ' + d[0].name + '</td>' +\n              '</tr>';\n            break;\n          case 'percentage':\n            percentUsed = Math.round(d[0].value / this.chartData.total * 100.0);\n            tipRows =\n              '<tr>' +\n              '  <td class=\"name\">' + percentUsed + '%' + '</td>' +\n              '</tr>';\n            break;\n          default:\n            tipRows = this.chartDefaults.getDefaultSparklineTooltip().contents(d);\n        }\n        return this.getTooltipTableHTML(tipRows);\n      },\n      position: (data: any, width: number, height: number, element: any) => {\n        let center;\n        let top;\n        let chartBox;\n        let graphOffsetX;\n        let x;\n\n        try {\n          center = parseInt(element.getAttribute('x'), 10);\n          top = parseInt(element.getAttribute('y'), 10);\n          chartBox = document.querySelector('#' + this.config.chartId).getBoundingClientRect();\n          graphOffsetX = document.querySelector('#' + this.config.chartId + ' g.c3-axis-y')\n            .getBoundingClientRect().right;\n          x = Math.max(0, center + graphOffsetX - chartBox.left - Math.floor(width / 2));\n\n          return {\n            top: top - height,\n            left: Math.min(x, chartBox.width - width)\n          };\n        } catch (e) {\n        }\n      }\n    };\n  }\n\n  // Private\n\n  private getTooltipTableHTML(tipRows: any): string {\n    return '<div class=\"module-triangle-bottom\">' +\n      '  <table class=\"c3-tooltip\">' +\n      '    <tbody>' +\n      tipRows +\n      '    </tbody>' +\n      '  </table>' +\n      '</div>';\n  }\n}\n\n/**\n * @deprecated Use SparklineChartComponent\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-chart-sparkline',\n  template: `<div #chartElement id=\"{{config.chartId}}\"></div>`\n})\nexport class SparklineComponent extends SparklineChartComponent {}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}