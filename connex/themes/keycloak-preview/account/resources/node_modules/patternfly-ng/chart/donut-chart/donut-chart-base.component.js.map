{"version":3,"file":"donut-chart-base.component.js","sourceRoot":"","sources":["../../../../build/src/app/chart/donut-chart/donut-chart-base.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { cloneDeep, defaultsDeep, isEqual, merge, uniqueId } from 'lodash';\n\nimport * as d3 from 'd3';\n\nimport { ChartDefaults } from '../chart-defaults';\nimport { ChartBase } from '../chart-base';\nimport { DonutChartBaseConfig } from './donut-chart-base-config';\nimport { WindowReference } from '../../utilities/window.reference';\n\n/**\n * Donut base\n */\nexport abstract class DonutChartBaseComponent extends ChartBase implements DoCheck, OnDestroy, OnInit {\n  /**\n   * An array containing key value pairs:\n   *\n   * key - string representing an arc within the donut chart\n   * value - number representing the value of the arc\n   */\n  @Input() chartData: any[];\n\n  /**\n   * Configuration object containing details about how to render the chart\n   */\n  @Input() config: DonutChartBaseConfig;\n\n  private defaultConfig: DonutChartBaseConfig;\n  private prevChartData: any[];\n  private prevConfig: DonutChartBaseConfig;\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Default constructor\n   * @param chartDefaults\n   */\n  constructor(protected chartDefaults: ChartDefaults, protected windowRef: WindowReference) {\n    super();\n    this.subscriptions.push(this.chartLoaded.subscribe({\n      next: (chart: any) => {\n        this.chartAvailable(chart);\n      }\n    }));\n  }\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfigDefaults();\n    this.setupConfig();\n    this.generateChart(this.config);\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    const dataChanged = !isEqual(this.chartData, this.prevChartData);\n    if (dataChanged || !isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n      this.generateChart(this.config, !dataChanged);\n    }\n  }\n\n  /**\n   * Clean up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe);\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaultsDeep(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n\n    if (this.config.chartHeight !== undefined) {\n      this.config.size.height = this.config.chartHeight;\n    }\n    this.config.data = merge(this.config.data, this.getChartData());\n    this.prevConfig = cloneDeep(this.config);\n    this.prevChartData = cloneDeep(this.chartData);\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfigDefaults(): void {\n    this.defaultConfig = this.chartDefaults.getDefaultDonutConfig();\n    this.defaultConfig.chartId = uniqueId();\n    this.defaultConfig.data = {\n      type: 'donut',\n      order: null\n    };\n    this.defaultConfig.donut = this.chartDefaults.getDefaultDonut();\n    this.defaultConfig.tooltip = { contents: (this.windowRef.nativeWindow).patternfly.pfDonutTooltipContents };\n  }\n\n  /**\n   * Convert chartData to C3 data property\n   */\n  protected getChartData(): any {\n    return {\n      columns: this.chartData,\n      colors: this.config.colors\n    };\n  }\n\n  /**\n   * Returns an object containing center label properties\n   * @returns {any}\n   */\n  getCenterLabelText(): any {\n    // Public for testing\n    let centerLabelText = {\n      title: this.getTotal(),\n      subTitle: this.config.donut.title\n    };\n    if (this.config.centerLabel) {\n      centerLabelText.title = this.config.centerLabel;\n      centerLabelText.subTitle = '';\n    }\n    return centerLabelText;\n  }\n\n  // Private\n\n  private chartAvailable(chart: any): void {\n    this.setupDonutChartTitle(chart);\n  }\n\n  private getTotal(): number {\n    let total = 0;\n    if (this.config.data !== undefined && this.config.data.columns !== undefined) {\n      this.config.data.columns.forEach((element: any) => {\n        if (!isNaN(element[1])) {\n          total += Number(element[1]);\n        }\n      });\n    }\n    return total;\n  }\n\n  private setupDonutChartTitle(chart: any): void {\n    let donutChartTitle, centerLabelText;\n\n    if (chart === undefined) {\n      return;\n    }\n\n    donutChartTitle = d3.select(chart.element).select('text.c3-chart-arcs-title');\n    if (donutChartTitle === undefined) {\n      return;\n    }\n\n    centerLabelText = this.getCenterLabelText();\n\n    donutChartTitle.text('');\n    if (centerLabelText.title && !centerLabelText.subTitle) {\n      donutChartTitle.text(centerLabelText.title);\n    } else {\n      donutChartTitle.insert('tspan', null).text(centerLabelText.title)\n        .classed('donut-title-big-pf', true).attr('dy', 0).attr('x', 0);\n      donutChartTitle.insert('tspan', null).text(centerLabelText.subTitle).\n        classed('donut-title-small-pf', true).attr('dy', 20).attr('x', 0);\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}