{"version":3,"file":"action.component.js","sourceRoot":"","sources":["../../../build/src/app/action/action.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { clone, cloneDeep, defaults, has, isEqual } from 'lodash';\n\nimport { Action } from './action';\nimport { ActionConfig } from './action-config';\n\n/**\n * List actions component.\n *\n * By default, buttons and kebab have no padding so they may inherit stying from components such as list and toolbar.\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-action',\n  template: `<button class=\"btn btn-default primary-action {{action.styleClass}}\" title=\"{{action.tooltip}}\" type=\"button\" *ngFor=\"let action of config.primaryActions\" [disabled]=\"action.disabled\" [ngClass]=\"{'invisible': action.visible === false}\" (click)=\"handleAction(action)\"><div *ngIf=\"action.template; then showButtonTemplate else showButton\"></div><ng-template #showButtonTemplate let-action=\"action\" [ngTemplateOutlet]=\"action.template\" [ngTemplateOutletContext]=\"{ action: action }\"></ng-template><ng-template #showButton>{{action.title}}</ng-template></button><ng-template *ngIf=\"template !== undefined\" let-action=\"action\" [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ action: action }\"></ng-template><div class=\"dropdown-kebab-pf pull-right {{config.moreActionsStyleClass}}\" dropdown [ngClass]=\"{'dropdown': !isMoreActionsDropup, 'dropup': isMoreActionsDropup, 'invisible': config.moreActionsVisible === false}\" *ngIf=\"config.moreActions?.length > 0\"><button class=\"btn btn-link dropdown-toggle\" type=\"button\" dropdownToggle [ngClass]=\"{'disabled': config.moreActionsDisabled}\" (click)=\"initMoreActionsDropup($event)\"><span class=\"fa fa-ellipsis-v\"></span></button><ul class=\"dropdown-menu-right dropdown-menu\" aria-labelledby=\"dropdownKebab\" *dropdownMenu><li *ngFor=\"let action of config.moreActions\" class=\"{{action.styleClass}}\" [attr.role]=\"action.separator === true ? 'separator' : 'menuitem'\" [ngClass]=\"{'divider': action.separator === true, 'disabled': action.disabled === true, 'hidden': action.visible === false}\"><a *ngIf=\"action.disabled !== true && action.separator !== true\" class=\"dropdown-item secondary-action\" href=\"javascript:void(0)\" title=\"{{action.tooltip}}\" (click)=\"handleAction(action)\">{{action.title}}</a> <a *ngIf=\"action.disabled === true && action.separator !== true\" class=\"dropdown-item secondary-action\" href=\"javascript:void(0)\" title=\"{{action.tooltip}}\" onclick=\"return false;\">{{action.title}}</a></li></ul></div>`\n})\nexport class ActionComponent implements DoCheck, OnInit {\n  /**\n   * The action config containing component properties\n   */\n  @Input() config: ActionConfig;\n\n  /**\n   * Action template for custom actions\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * The event emitted when an action has been selected\n   */\n  @Output('onActionSelect') onActionSelect = new EventEmitter();\n\n  private defaultConfig = {\n    moreActionsDisabled: false,\n    moreActionsVisible: true\n  } as ActionConfig;\n  private isMoreActionsDropup: boolean = false;\n  private prevConfig: ActionConfig;\n\n  /**\n   * The default constructor\n   *\n   * @param el The element reference for this component\n   */\n  constructor(private el: ElementRef) {\n  }\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    // lodash has issues deep cloning templates -- best seen with list component\n    this.prevConfig = clone(this.config);\n  }\n\n  // Private\n\n  private handleAction(action: Action): void {\n    if (action && action.disabled !== true) {\n      this.onActionSelect.emit(action);\n    }\n  }\n\n  /**\n   * Set flag indicating if kebab should be shown as a dropdown or dropup\n   *\n   * @param $event The MouseEvent triggering this function\n   */\n  private initMoreActionsDropup($event: MouseEvent): void {\n    window.requestAnimationFrame(() => {\n      let kebabContainer = this.closest($event.target, '.dropdown-kebab-pf.open', 'pfng-list-actions');\n      let listContainer = this.closest(this.el.nativeElement, '.list-pf', 'pfng-list');\n      if (kebabContainer === null || listContainer === null) {\n        return;\n      }\n\n      let dropdownButton = kebabContainer.querySelector('.dropdown-toggle');\n      let dropdownMenu = kebabContainer.querySelector('.dropdown-menu');\n      let buttonRect = dropdownButton.getBoundingClientRect();\n      let menuRect = dropdownMenu.getBoundingClientRect();\n      let menuTop = buttonRect.top - menuRect.height;\n      let menuBottom = buttonRect.top + buttonRect.height + menuRect.height;\n      let parentRect = listContainer.getBoundingClientRect();\n\n      if ((menuBottom <= parentRect.top + parentRect.height) || (menuTop < parentRect.top)) {\n        this.isMoreActionsDropup = false;\n      } else {\n        this.isMoreActionsDropup = true;\n      }\n    });\n  }\n\n  // Utils\n\n  /**\n   * Get the closest ancestor based on given selector\n   *\n   * @param el The HTML element to start searching for matching ancestor\n   * @param selector The selector to match\n   * @param stopSelector If this selector is matched, the search is stopped\n   * @returns {HTMLElement} The matching HTML element or null if not found\n   */\n  private closest(el: any, selector: string, stopSelector: string): HTMLElement {\n    let retval = null;\n    while (el) {\n      if (el.matches(selector)) {\n        retval = el;\n        break;\n      } else if (stopSelector && el.matches(stopSelector)) {\n        break;\n      }\n      el = el.parentElement;\n    }\n    return retval;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}