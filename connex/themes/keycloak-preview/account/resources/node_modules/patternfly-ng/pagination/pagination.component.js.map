{"version":3,"file":"pagination.component.js","sourceRoot":"","sources":["../../../build/src/app/pagination/pagination.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\nimport { PaginationConfig } from './pagination-config';\nimport { PaginationEvent } from './pagination-event';\n\n/**\n * Component for rendering pagination\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-pagination',\n  template: `<form class=\"content-view-pf-pagination list-view-pf-pagination clearfix\"><div class=\"form-group\"><div class=\"padding-right-10\"><div class=\"btn-group dropdown\" dropdown><button #pageSizeMenu type=\"button\" class=\"btn btn-default dropdown-toggle\" dropdownToggle>{{config.pageSize}}<span class=\"caret\"></span></button><ul class=\"dropdown-menu\" *dropdownMenu><li class=\"display-length-increment\" [ngClass]=\"{'selected': increment === config?.pageSize}\" *ngFor=\"let increment of config?.pageSizeIncrements\"><a role=\"menuitem\" (click)=\"onPageSizeUpdate($event, increment)\">{{increment}}</a></li></ul></div></div><span for=\"pageSizeMenu\" class=\"per-page-label\">per page</span></div><div class=\"form-group\"><span><span class=\"pagination-pf-item-current\">{{getCurrentPage()}}</span>&nbsp;of&nbsp; <span class=\"pagination-pf-items-total\">{{config.totalItems}}</span></span><ul class=\"pagination pagination-pf-back\"><li [ngClass]=\"{'disabled': config.pageNumber === 1}\"><a class=\"goto-first-page\" title=\"First Page\" (click)=\"gotoFirstPage()\"><span class=\"i fa fa-angle-double-left\"></span></a></li><li [ngClass]=\"{'disabled': config.pageNumber === 1}\"><a class=\"goto-prev-page\" title=\"Previous Page\" (click)=\"gotoPreviousPage()\"><span class=\"i fa fa-angle-left\"></span></a></li></ul><input class=\"pagination-pf-page\" name=\"pageNumber\" type=\"text\" [(ngModel)]=\"pageNumber\" (blur)=\"onPageNumberBlur($event)\" (keyup.enter)=\"onPageNumberKeyup($event)\"> <span>of&nbsp;<span class=\"pagination-pf-pages\">{{lastPageNumber}}</span></span><ul class=\"pagination pagination-pf-forward\"><li [ngClass]=\"{'disabled': config.pageNumber === lastPageNumber}\"><a class=\"goto-next-page\" title=\"Next Page\" (click)=\"gotoNextPage()\"><span class=\"i fa fa-angle-right\"></span></a></li><li [ngClass]=\"{'disabled': config.pageNumber === lastPageNumber}\"><a class=\"goto-last-page\" title=\"Last Page\" (click)=\"gotoLastPage()\"><span class=\"i fa fa-angle-double-right\"></span></a></li></ul></div></form>`\n})\nexport class PaginationComponent implements DoCheck, OnInit {\n  /**\n   * The Pagination config contaning component properties\n   */\n  @Input() config: PaginationConfig;\n\n  /**\n   * The Event is emitted when Page Size is changed\n   */\n  @Output('onPageSizeChange') onPageSizeChange = new EventEmitter();\n\n  /**\n   * The Event is emitted when Page Number is Changed\n   */\n  @Output('onPageNumberChange') onPageNumberChange = new EventEmitter();\n\n  private defaultConfig = {\n    pageNumber: 1,\n    pageSizeIncrements: [5, 10, 20, 40, 80, 100],\n    pageSize: 5\n  } as PaginationConfig;\n  private _pageNumber: number;\n  private prevConfig: PaginationConfig;\n  private _lastPageNumber: number;\n\n  /**\n   * The default constructor\n   */\n  constructor() {}\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n    this.lastPageNumber = this.getLastPageNumber();\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Setup default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    this.lastPageNumber = this.getLastPageNumber();\n    this.pageNumber = this.config.pageNumber;\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  // Accessors\n\n  get pageNumber(): number {\n    return (this.config.totalItems !== undefined && this.config.totalItems > 0) ? this._pageNumber : 0;\n  }\n\n  set pageNumber(pageNumber: number) {\n    this._pageNumber = pageNumber;\n  }\n\n  /**\n   * Return last page number\n   */\n  get lastPageNumber(): number {\n    return (this.config.totalItems !== undefined && this.config.totalItems > 0) ? this._lastPageNumber : 0;\n  }\n\n  /**\n   * Update Last page Number\n   */\n  set lastPageNumber(value: number) {\n    this._lastPageNumber = value;\n  }\n\n  // Actions\n\n  /**\n   * Jump to First Page\n   */\n  gotoFirstPage(): void {\n    if (this.config.pageNumber !== 1) {\n      this.updatePageNumber(1);\n    }\n  }\n\n  /**\n   * Go to Previous Page\n   */\n  gotoPreviousPage(): void {\n    if (this.config.pageNumber !== 1) {\n      this.updatePageNumber(this.config.pageNumber - 1);\n    }\n  }\n\n  /**\n   * Go to Next Page\n   */\n  gotoNextPage(): void {\n    if (this.config.pageNumber < this.lastPageNumber) {\n      this.updatePageNumber(this.config.pageNumber + 1);\n    }\n  }\n\n  /**\n   * Jump to Last Page\n   */\n  gotoLastPage(): void {\n    if (this.config.pageNumber < this.lastPageNumber) {\n      this.updatePageNumber(this.lastPageNumber);\n    }\n  }\n\n  /**\n   * Return start index and end index of current page\n   */\n  getCurrentPage() {\n    return this.getStartIndex() + ' - ' + this.getEndIndex();\n  }\n\n  /**\n   * Start Index of Current Page\n   */\n  protected getStartIndex(): number {\n    return (this.config.totalItems !== undefined && this.config.totalItems > 0)\n      ? this.config.pageSize * (this.config.pageNumber - 1) + 1 : 0;\n  }\n\n  /**\n   * End Index of Current Page\n   */\n  protected getEndIndex(): number {\n    let numFullPages = Math.floor(this.config.totalItems / this.config.pageSize);\n    let numItemsOnLastPage = this.config.totalItems - (numFullPages * this.config.pageSize) || this.config.pageSize;\n    let numItemsOnPage = this.isLastPage() ? numItemsOnLastPage : this.config.pageSize;\n    return (this.config.totalItems !== undefined && this.config.totalItems > 0)\n      ? (this.getStartIndex() + numItemsOnPage - 1) : 0;\n  }\n\n  /**\n   * Page number is changed via input field's focus event\n   */\n  onPageNumberBlur($event: FocusEvent) {\n    let newPageNumber: number = parseInt(String(this.pageNumber), 10);\n    if (isNaN(newPageNumber)) {\n      newPageNumber = this.pageNumber = this.config.pageNumber;\n    }\n\n    if (newPageNumber > this.lastPageNumber) {\n      this.updatePageNumber(this.lastPageNumber);\n    } else if (newPageNumber < 1) {\n      this.updatePageNumber(1);\n    } else {\n      this.updatePageNumber(newPageNumber);\n    }\n  }\n\n  /**\n   * Page number is changed via input field's keyboard event\n   */\n  onPageNumberKeyup($event: KeyboardEvent): void {\n    let keycode = $event.keyCode ? $event.keyCode : $event.which;\n    if (keycode === 13) {\n      this.onPageNumberBlur(null);\n    }\n  }\n\n  // Private\n\n  /**\n   * Page size is changed\n   * @param newPageSize new page size\n   */\n  private onPageSizeUpdate($event: Event, newPageSize: number): void {\n    this.config.pageSize = newPageSize;\n    this.lastPageNumber = this.getLastPageNumber();\n    this.gotoFirstPage();\n    this.onPageSizeChange.emit({\n      pageSize: newPageSize\n    } as PaginationEvent);\n  }\n\n  /**\n   * Update the Page Number\n   * @param newPageNumber new page number\n   */\n  private updatePageNumber(newPageNumber: number): void {\n    this.config.pageNumber = this.pageNumber = newPageNumber;\n    this.onPageNumberChange.emit({\n      pageNumber: newPageNumber\n    } as PaginationEvent);\n  }\n\n  /**\n   * Get Last Page Number\n   */\n  private getLastPageNumber(): number {\n    return Math.ceil(this.config.totalItems / this.config.pageSize);\n  }\n\n  /**\n   * Check if current Page is Last Page\n   */\n  private isLastPage(): boolean {\n    return (this.config.pageNumber === this.lastPageNumber);\n  }\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}