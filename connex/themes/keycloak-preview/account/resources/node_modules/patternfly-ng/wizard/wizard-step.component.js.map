{"version":3,"file":"wizard-step.component.js","sourceRoot":"","sources":["../../../build/src/app/wizard/wizard-step.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Host,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\nimport { WizardBase } from './wizard-base';\nimport { WizardComponent } from './wizard.component';\nimport { WizardEvent } from './wizard-event';\nimport { WizardStep } from './wizard-step';\nimport { WizardStepConfig } from './wizard-step-config';\n\n/**\n * Wizard step component. Each step can stand alone or have substeps.\n *\n * Note: This component is expected to be a child of wizard.\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-wizard-step',\n  template: `<section class=\"wizard-pf-row\" *ngIf=\"selected\"><div class=\"wizard-pf-sidebar\" [ngClass]=\"wizard?.config?.sidebarStyleClass\" [ngStyle]=\"wizard?.contentStyle\" *ngIf=\"hasSubsteps && !wizard?.config?.hideSidebar\"><ul class=\"list-group\"><li class=\"list-group-item\" [ngClass]=\"{'active': step.selected}\" *ngFor=\"let step of getEnabledSteps()\"><a (click)=\"stepClick(step)\"><span class=\"wizard-pf-substep-number\">{{getDisplayNumber(step)}}</span> <span class=\"wizard-pf-substep-title\">{{step.config?.title}}</span></a></li></ul></div><div class=\"wizard-pf-main {{wizard.config?.stepStyleClass}}\" [ngClass]=\"{'pfng-wizard-single-step': !hasSubsteps || wizard?.config?.hideSidebar}\" [ngStyle]=\"wizard?.contentStyle\"><div class=\"wizard-pf-contents\"><ng-content></ng-content></div></div></section>`\n})\nexport class WizardStepComponent extends WizardBase implements OnInit, WizardStep {\n  /**\n   * The wizard step config containing component properties\n   */\n  @Input() config: WizardStepConfig;\n\n  /**\n   * The wizard step template used for the review details screen\n   */\n  @Input() reviewTemplate: TemplateRef<any>;\n\n  /**\n   * The event emitted when this wizard step is shown\n   */\n  @Output('onShow') onShow = new EventEmitter();\n\n  private defaultConfig = {\n    allowClickNav: true,\n    allowNavAway: true,\n    completed: false,\n    disabled: false,\n    expandReview: true,\n    expandReviewDetails: false,\n    nextEnabled: true,\n    previousEnabled: true,\n    priority: 999,\n    title: ''\n  } as WizardStepConfig;\n  private init: boolean = true;\n  private pageIndex: number = 0;\n  private prevConfig: WizardStepConfig;\n  private _selected: boolean = false;\n  private wizard: WizardComponent;\n\n  /**\n   * The default constructor\n   */\n  constructor(@Host() wizard: WizardComponent) {\n    super();\n    this.wizard = wizard;\n  }\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n    if (this.wizard !== undefined && this.selectedStep === undefined) {\n      this.wizard.addStep(this);\n    }\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n    if (this.wizard !== undefined) {\n      this.pageIndex = this.wizard.getStepIndex(this);\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  // Accessors\n\n  /**\n   * Indicates that this wizard step has substeps\n   *\n   * @returns {boolean} true if this wizard step has substeps\n   */\n  get hasSubsteps() {\n    return this.steps.length > 0;\n  }\n\n  /**\n   * Indicates that the next button is enabled\n   *\n   * @returns {boolean} true if the next button is enabled\n   */\n  get nextEnabled() {\n    let enabled = this.config.nextEnabled;\n    if (this.hasSubsteps) {\n      let selectedSubstep = this.getEnabledSteps().filter(step => step.selected);\n      if (selectedSubstep && selectedSubstep.length > 0) {\n        enabled = selectedSubstep[0].config.nextEnabled;\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * Indicates that the previous button is enabled\n   *\n   * @returns {boolean} true if the previous button is enabled\n   */\n  get previousEnabled() {\n    let enabled = this.config.previousEnabled;\n    if (this.hasSubsteps) {\n      let selectedSubstep = this.getEnabledSteps().filter(step => step.selected);\n      if (selectedSubstep && selectedSubstep.length > 0) {\n        enabled = selectedSubstep[0].config.previousEnabled;\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * Indicates that this wizard step is selected\n   *\n   * @returns {boolean} True if this wizard step is selected\n   */\n  get selected() {\n    return this._selected;\n  }\n\n  /**\n   * Sets a flag indicating that this wizard step is selected\n   *\n   * @param {boolean} selected True if this wizard step is selected\n   */\n  set selected(selected: boolean) {\n    this._selected = selected;\n  }\n\n  // Methods\n\n  /**\n   * Returns the step number to be displayed for the given wizard step or substep\n   *\n   * @param {WizardStep} step The wizard step or substep\n   * @returns {string} The step number to be displayed\n   */\n  getDisplayNumber(step: WizardStep): string {\n    return this.pageIndex + String.fromCharCode(65 + this.stepIndex(step)) + '.';\n  }\n\n  /**\n   * Returns only wizard substeps with review templates\n   *\n   * @returns {WizardStep[]} The wizard stepd or substepd\n   */\n  getReviewSteps(): WizardStep[] {\n    let reviewSteps = this.getEnabledSteps().filter((step: WizardStep) => {\n      return (step.reviewTemplate !== undefined);\n    });\n    return reviewSteps;\n  }\n\n  /**\n   * Navigate to the first wizard substep\n   */\n  goToFirstStep(): void {\n    this.goTo(this.getEnabledSteps()[0]);\n  }\n\n  /**\n   * Navigate to the last wizard substep\n   */\n  goToLastStep(): void {\n    let enabledSteps = this.getEnabledSteps();\n    this.goTo(enabledSteps[enabledSteps.length - 1]);\n  }\n\n  /**\n   * Navigate to the next wizard step or substep\n   */\n  goToNextStep(): void {\n    this.next(false);\n  }\n\n  /**\n   * Navigate to the previous wizard step or substep\n   */\n  goToPreviousStep(): void {\n    this.previous(false);\n  }\n\n  /**\n   * Called when the next button has been selected.\n   *\n   * @param {boolean} emitEvent True to emit the wizard's onNext event\n   */\n  next(emitEvent: boolean): boolean {\n    let enabledSteps: WizardStep[] = this.getEnabledSteps();\n\n    // Save the step you were on when next() was invoked\n    let index = this.stepIndex(this.selectedStep);\n\n    let wizEvent = {\n      index: index,\n      step: this.selectedStep\n    } as WizardEvent;\n\n    if (emitEvent !== false) {\n      this.wizard.onNext.emit(wizEvent);\n    }\n\n    // Set completed property, which may be used to add/remove a style class from progress bar\n    this.selectedStep.config.completed = true;\n\n    // Ensure this is not the last step.\n    if (index === enabledSteps.length - 1) {\n      return false;\n    }\n    this.goTo(enabledSteps[index + 1]);\n    return true;\n  }\n\n  /**\n   * Called when the previous button has been selected.\n   *\n   * @param {boolean} emitEvent True to emit the wizard's onPrevious event\n   */\n  previous(emitEvent: boolean): boolean {\n    let index = this.stepIndex(this.selectedStep);\n    let wizEvent = {\n      index: index,\n      step: this.selectedStep\n    } as WizardEvent;\n\n    if (emitEvent !== false) {\n      this.wizard.onPrevious.emit(wizEvent);\n    }\n\n    // Ensure this is not the first step\n    if (index === 0) {\n      return false;\n    }\n    this.goTo(this.getEnabledSteps()[index - 1]);\n    return true;\n  }\n\n  /**\n   * Emits an event when a wizard step or substep is shown\n   */\n  show(index: number) {\n    this.onShow.emit({\n      index: index,\n      step: this\n    } as WizardEvent);\n  }\n\n  // Private\n\n  // Navigate to the given wizard substep\n  private goTo(step: WizardStep): void {\n    if (step === undefined || this.wizard === undefined || this.wizard.config.done\n        || (!this.init && this.selectedStep !== undefined && !this.selectedStep.config.allowNavAway)) {\n      return;\n    }\n    if (this.init || this.isPreviousStepsComplete(step)\n        || (this.getStepIndex(step) < this.selectedStepIndex && this.selectedStep.config.previousEnabled)) {\n      this.unselectAll();\n      this.selectedStep = step;\n      step.selected = true;\n      step.show(this.stepIndex(step));\n      this.wizard.stepChanged(step, this.stepIndex(step));\n      this.wizard.updateStepIndex(this.stepIndex(this.selectedStep));\n      this.init = false;\n    }\n  }\n\n  // Indicates all previous substeps are complete for this wizard step\n  private isPreviousStepsComplete(nextStep: WizardStep): boolean {\n    let nextIdx = this.stepIndex(nextStep);\n    let complete = true;\n    this.getEnabledSteps().forEach((step: WizardStep, stepIndex) => {\n      if (stepIndex < nextIdx) {\n        complete = complete && step.config.nextEnabled;\n      }\n    });\n    return complete;\n  }\n\n  // Handle step navigation\n  private stepClick(step: WizardStep): void {\n    if (step.config.allowClickNav) {\n      this.goTo(step);\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}