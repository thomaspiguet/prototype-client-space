{"version":3,"file":"wizard.component.js","sourceRoot":"","sources":["../../../build/src/app/wizard/wizard.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,SAAS,EAET,YAAY,EACZ,KAAK,EAEL,MAAM,EACN,iBAAiB,EAClB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAEtD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAI/C;;GAEG;AAMH;IAAqC,mCAAU;IAiD7C;;OAEG;IACH;QAAA,YACE,iBAAO,SACR;QAhDD;;WAEG;QACiB,cAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAElD;;WAEG;QACiB,cAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAElD;;WAEG;QACe,YAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAE9C;;WAEG;QACmB,gBAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAEtD;;WAEG;QACqB,kBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAGlD,mBAAa,GAAG;YACtB,WAAW,EAAE,QAAQ;YACrB,IAAI,EAAE,KAAK;YACX,aAAa,EAAE,OAAO;YACtB,WAAW,EAAE,KAAK;YAClB,cAAc,EAAE,KAAK;YACrB,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,KAAK;YACjB,kBAAkB,EAAE,KAAK;YACzB,SAAS,EAAE,QAAQ;YACnB,aAAa,EAAE,QAAQ;YACvB,KAAK,EAAE,IAAI;SACI,CAAC;QACV,UAAI,GAAY,IAAI,CAAC;QACrB,gBAAU,GAAY,KAAK,CAAC;;IAQpC,CAAC;IAED,iBAAiB;IAEjB;;OAEG;IACH,kCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACnC,UAAU,CAAC;gBACT,KAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,EAAE,EAAE,CAAC,CAAC;QACT,CAAC;IACH,CAAC;IAED;;OAEG;IACH,mCAAS,GAAT;QACE,8BAA8B;QAC9B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED;;OAEG;IACO,qCAAW,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9C,CAAC;QAED,gDAAgD;QAChD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC;YAC7C,8GAA8G;YAC9G,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,KAAK,SAAS,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;YAC7D,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,GAAG;gBAClB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;gBACnC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;gBACvC,YAAY,EAAE,MAAM;aACrB,CAAC;QACJ,CAAC;QAED,sBAAsB;QACtB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACxF,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IASD,sBAAI,sCAAS;QAPb,YAAY;QAEZ;;;;WAIG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;QAED;;;;WAIG;aACH,UAAc,SAAkB;YAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC9B,CAAC;;;OATA;IAWD,UAAU;IAEV;;;;OAIG;IACH,iCAAO,GAAP,UAAQ,IAAgB;QACtB,iBAAM,OAAO,YAAC,IAAI,CAAC,CAAC;QAEpB,IAAI,YAAY,GAAiB,IAAI,CAAC,eAAe,EAAE,CAAC;QACxD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,wCAAc,GAAd;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,UAAC,IAAgB;YAC/D,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,SAAS,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,sCAAY,GAAZ;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;IAED;;OAEG;IACH,0CAAgB,GAAhB;QACE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACH,kCAAQ,GAAR,UAAS,SAAiB,EAAE,YAAqB;QAC/C,IAAI,YAAY,GAAiB,IAAI,CAAC,eAAe,EAAE,CAAC;QACxD,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,8BAAI,GAAJ,UAAK,SAAkB;QACrB,IAAI,YAAY,GAAiB,IAAI,CAAC,eAAe,EAAE,CAAC;QAExD,oDAAoD;QACpD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE9C,IAAI,QAAQ,GAAG;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI,CAAC,YAAY;SACT,CAAC;QAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;YAClC,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC;YACT,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;QAED,0FAA0F;QAC1F,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;QAE1C,mCAAmC;QACnC,EAAE,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,kCAAQ,GAAR,UAAS,SAAkB;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE9C,IAAI,QAAQ,GAAG;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI,CAAC,YAAY;SACT,CAAC;QAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;YAClC,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC1C,MAAM,CAAC;YACT,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,CAAC;QACH,CAAC;QAED,oCAAoC;QACpC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC1D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,qCAAW,GAAX,UAAY,IAAgB,EAAE,KAAa;QACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;SACI,CAAC,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,yCAAe,GAAf,UAAgB,SAAiB;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,SAAS,KAAK,CAAC,CAAC;IAC9E,CAAC;IAED,UAAU;IAEV,8FAA8F;IACtF,iDAAuB,GAA/B,UAAgC,IAAgB;QAC9C,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;eACnB,IAAI,CAAC,MAAM,CAAC,aAAa;eACzB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY;eACrC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;eACpG,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChH,CAAC;IAED,qEAAqE;IAC7D,gCAAM,GAAd;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC;YACxC,IAAI,EAAE,IAAI,CAAC,YAAY;SACT,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,6EAA6E;IACrE,gCAAM,GAAd;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC;YACxC,IAAI,EAAE,IAAI,CAAC,YAAY;SACT,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,gCAAgC;IACxB,8BAAI,GAAZ,UAAa,IAAgB,EAAE,gBAAyB,EAAE,eAAwB;QAChF,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI;eACnC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjG,MAAM,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC;eACjG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,gBAAgB,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,eAAe,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/C,CAAC;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,KAAK,CAAC,CAAC;QACxG,CAAC;IACH,CAAC;IAED,mGAAmG;IAC3F,uCAAa,GAArB;QACE,+CAA+C;QAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,SAAS;eAC/D,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;eAC9D,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACvG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACpE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,YAAY,GAAiB,IAAI,CAAC,eAAe,EAAE,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,qBAAqB;IACb,+BAAK,GAAb;QACE,kEAAkE;QAClE,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,UAAC,IAAgB;YAC9C,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,mBAAmB;QACnB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,yBAAyB;IACjB,mCAAS,GAAjB,UAAkB,IAAgB;QAChC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IA3WQ;QAAR,KAAK,EAAE;kCAAS,YAAY;mDAAC;IAKV;QAAnB,MAAM,CAAC,UAAU,CAAC;;qDAA+B;IAK9B;QAAnB,MAAM,CAAC,UAAU,CAAC;;qDAA+B;IAKhC;QAAjB,MAAM,CAAC,QAAQ,CAAC;;mDAA6B;IAKxB;QAArB,MAAM,CAAC,YAAY,CAAC;;uDAAiC;IAK9B;QAAvB,MAAM,CAAC,cAAc,CAAC;;yDAAmC;IA7B/C,eAAe;QAL3B,SAAS,CAAC;YACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,s8EAAs1E;SACj2E,CAAC;;OACW,eAAe,CAgX3B;IAAD,sBAAC;CAAA,AAhXD,CAAqC,UAAU,GAgX9C;SAhXY,eAAe","sourcesContent":["import {\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\nimport { WizardBase } from './wizard-base';\nimport { WizardConfig } from './wizard-config';\nimport { WizardEvent } from './wizard-event';\nimport { WizardStep } from './wizard-step';\n\n/**\n * Wizard component\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-wizard',\n  template: `<div class=\"modal-header\" *ngIf=\"!config?.hideHeader\"><button class=\"close wizard-pf-dismiss\" aria-hidden=\"true\" aria-label=\"Close\" type=\"button\" (click)=\"cancel()\" *ngIf=\"!config?.embedInPage\"><span class=\"pficon pficon-close\"></span></button><h4 class=\"modal-title\">{{config?.title}}</h4></div><div class=\"modal-body wizard-pf-body clearfix\"><div class=\"wizard-pf-steps\" [ngClass]=\"{'invisible': !config?.ready}\" *ngIf=\"config?.ready\"><ul class=\"wizard-pf-steps-indicator\" [ngClass]=\"{'invisible': !config?.ready}\" *ngIf=\"!config?.hideIndicators\"><li class=\"wizard-pf-step\" [ngClass]=\"{'active': step.selected}\" *ngFor=\"let step of getEnabledSteps(); let i = index\"><a (click)=\"stepClick(step)\" [ngClass]=\"{'disabled': !allowStepIndicatorClick(step)}\"><span class=\"wizard-pf-step-number\">{{i + 1}}</span> <span class=\"wizard-pf-step-title\">{{step.config?.title}}</span></a></li></ul></div><div *ngIf=\"!config?.ready\" class=\"wizard-pf-main pfng-wizard-main\"><div class=\"wizard-pf-loading blank-slate-pf\"><div class=\"spinner spinner-lg blank-slate-pf-icon\"></div><h3 class=\"blank-slate-pf-main-action\">{{config?.loadingTitle}}</h3><p class=\"blank-slate-pf-secondary-action\">{{config?.loadingSecondaryInfo}}</p></div></div><div class=\"pfng-wizard-position-override\"><ng-content></ng-content></div></div><div class=\"modal-footer wizard-pf-footer pfng-wizard-position-override\" [ngClass]=\"{'pfng-footer-inline': config?.embedInPage}\"><button class=\"btn btn-default wizard-btn btn-cancel\" type=\"button\" [disabled]=\"config?.done\" (click)=\"cancel()\" *ngIf=\"!config?.embedInPage\">{{config?.cancelTitle}}</button> <button class=\"btn btn-default pfng-wizard-previous-btn\" type=\"button\" tooltip=\"{{selectedStep?.config?.previousTooltip}}\" placement=\"left\" [ngClass]=\"{'pfng-wizard-btn-no-back': config?.hidePreviousButton}\" [disabled]=\"!config?.ready || config?.done || !selectedStep?.previousEnabled || firstStep\" (click)=\"previous(true)\">{{config?.previousTitle}}</button> <button class=\"btn btn-primary wizard-pf-next\" type=\"button\" tooltip=\"{{selectedStep?.config?.nextTooltip}}\" placement=\"left\" [disabled]=\"!config?.ready || !selectedStep?.nextEnabled\" (click)=\"next(true)\">{{config?.nextTitle}}</button> <button class=\"btn btn-default btn-cancel pfng-cancel-inline\" type=\"button\" [disabled]=\"config?.done\" (click)=\"cancel()\" *ngIf=\"config?.embedInPage\">{{config?.cancelTitle}}</button></div>`\n})\nexport class WizardComponent extends WizardBase implements DoCheck, OnInit {\n  /**\n   * The wizard config containing component properties\n   */\n  @Input() config: WizardConfig;\n\n  /**\n   * The event emitted when the cancel button has been selected\n   */\n  @Output('onCancel') onCancel = new EventEmitter();\n\n  /**\n   * The event emitted when all wizard steps and substeps have finished\n   */\n  @Output('onFinish') onFinish = new EventEmitter();\n\n  /**\n   * The event emitted when the next button has been selected\n   */\n  @Output('onNext') onNext = new EventEmitter();\n\n  /**\n   * The event emitted when the back button has been selected\n   */\n  @Output('onPrevious') onPrevious = new EventEmitter();\n\n  /**\n   * The event emitted when a step has changed\n   */\n  @Output('onStepChange') onStepChange = new EventEmitter();\n\n  private contentStyle: any;\n  private defaultConfig = {\n    cancelTitle: 'Cancel',\n    done: false,\n    contentHeight: '300px',\n    embedInPage: false,\n    hideIndicators: false,\n    hideSidebar: false,\n    hideHeader: false,\n    hidePreviousButton: false,\n    nextTitle: 'Next >',\n    previousTitle: '< Back',\n    ready: true\n  } as WizardConfig;\n  private init: boolean = true;\n  private _firstStep: boolean = false;\n  private prevConfig: WizardConfig;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n    super();\n  }\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n    if (this.init && this.config.ready) {\n      setTimeout(() => {\n        this.initFirstStep();\n      }, 10);\n    }\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n\n    // If a step class is given use it for all steps\n    if (this.config.stepStyleClass !== undefined) {\n      // If a sidebarStyleClass is given, us it for sidebar panel, if not, apply the stepsClass to the sidebar panel\n      if (this.config.sidebarStyleClass === undefined) {\n        this.config.sidebarStyleClass = this.config.stepStyleClass;\n      }\n    } else {\n      this.contentStyle = {\n        'height': this.config.contentHeight,\n        'max-height': this.config.contentHeight,\n        'overflow-y': 'auto'\n      };\n    }\n\n    // Ready state changed\n    if (this.prevConfig !== undefined && !isEqual(this.config.ready, this.prevConfig.ready)) {\n      this.initFirstStep();\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  // Accessors\n\n  /**\n   * Indicates that the selected step is also the first wizard step or substep\n   *\n   * @returns {boolean} True if the selected step is the first wizard step or substep\n   */\n  get firstStep(): boolean {\n    return this._firstStep;\n  }\n\n  /**\n   * Set a flag indicating that the selected step is also the first wizard step or substep\n   *\n   * @param {boolean} firstStep True if the selected step is the first wizard step or substep\n   */\n  set firstStep(firstStep: boolean) {\n    this._firstStep = firstStep;\n  }\n\n  // Methods\n\n  /**\n   * Add a wizard step or substep to this component\n   *\n   * @param {WizardStep} step The wizard step or substep\n   */\n  addStep(step: WizardStep): void {\n    super.addStep(step);\n\n    let enabledSteps: WizardStep[] = this.getEnabledSteps();\n    if (this.config.ready && (enabledSteps.length > 0) && (step === enabledSteps[0])) {\n      this.goTo(enabledSteps[0], true, false);\n    }\n  }\n\n  /**\n   * Returns only wizard steps with review templates\n   *\n   * @returns {WizardStep[]} The wizard stepd or substepd\n   */\n  getReviewSteps(): WizardStep[] {\n    let reviewSteps = this.getEnabledSteps().filter((step: WizardStep) => {\n      return (step.reviewTemplate !== undefined || step.getReviewSteps().length > 0);\n    });\n    return reviewSteps;\n  }\n\n  /**\n   * Navigate to the next wizard step or substep\n   */\n  goToNextStep(): void {\n    this.next(false);\n  }\n\n  /**\n   * Navigate to the previous wizard step or substep\n   */\n  goToPreviousStep(): void {\n    this.previous(false);\n  }\n\n  /**\n   * Navigate to the given wizard step index\n   *\n   * @param {number} stepIndex The step number to navigate to\n   * @param {boolean} resetStepNav True if the first substep (if exists) should be selected\n   */\n  goToStep(stepIndex: number, resetStepNav: boolean): void {\n    let enabledSteps: WizardStep[] = this.getEnabledSteps();\n    if (stepIndex < enabledSteps.length) {\n      this.goTo(enabledSteps[stepIndex], resetStepNav, false);\n    }\n  }\n\n  /**\n   * Called when the next button has been selected.\n   *\n   * @param {boolean} emitEvent True to emit the onNext event\n   */\n  next(emitEvent: boolean): void {\n    let enabledSteps: WizardStep[] = this.getEnabledSteps();\n\n    // Save the step you were on when next() was invoked\n    let index = this.stepIndex(this.selectedStep);\n\n    let wizEvent = {\n      index: index,\n      step: this.selectedStep\n    } as WizardEvent;\n\n    if (this.selectedStep.hasSubsteps) {\n      // Handle navigation in substep\n      if (this.selectedStep.next(emitEvent)) {\n        return;\n      }\n    } else {\n      if (emitEvent !== false) {\n        this.onNext.emit(wizEvent);\n      }\n    }\n\n    // Set completed property, which may be used to add/remove a style class from progress bar\n    this.selectedStep.config.completed = true;\n\n    // Ensure this is not the last step\n    if (index === enabledSteps.length - 1) {\n      this.finish();\n    } else {\n      this.goTo(enabledSteps[index + 1], true, false);\n    }\n  }\n\n  /**\n   * Called when the previous button has been selected.\n   *\n   * @param {boolean} emitEvent True to emit the onNext event\n   */\n  previous(emitEvent: boolean): void {\n    let index = this.stepIndex(this.selectedStep);\n\n    let wizEvent = {\n      index: index,\n      step: this.selectedStep\n    } as WizardEvent;\n\n    if (this.selectedStep.hasSubsteps) {\n      // Handle navigation in substep\n      if (this.selectedStep.previous(emitEvent)) {\n        return;\n      }\n    } else {\n      if (emitEvent !== false) {\n        this.onPrevious.emit(wizEvent);\n      }\n    }\n\n    // Ensure this is not the first step\n    if (index === 0) {\n      throw new Error(\"Can't go back. Already at first step\");\n    } else {\n      this.goTo(this.getEnabledSteps()[index - 1], false, true);\n    }\n  }\n\n  /**\n   * Emits an event when the wizard step or substep has changed\n   *\n   * @param {WizardStep} step The wizard step or substep\n   * @param {number} index The order of the wizard step of substep within its parent\n   */\n  stepChanged(step: WizardStep, index: number): void {\n    this.onStepChange.emit({\n      index: index,\n      step: step\n    } as WizardEvent);\n  }\n\n  /**\n   * Set a flag indicating that the selected step is also the first wizard step or substep\n   *\n   * @param {number} stepIndex The step index\n   */\n  updateStepIndex(stepIndex: number): void {\n    this.firstStep = this.stepIndex(this.selectedStep) === 0 && stepIndex === 0;\n  }\n\n  // Private\n\n  // Indicates that the user can click on numeric step indicators to navigate directly to a step\n  private allowStepIndicatorClick(step: WizardStep): boolean {\n    if (step === undefined || this.selectedStep === undefined) {\n      return false;\n    }\n    return !this.config.done\n      && step.config.allowClickNav\n      && this.selectedStep.config.allowNavAway\n      && (this.selectedStep.config.nextEnabled || (step.config.priority < this.selectedStep.config.priority))\n      && (this.selectedStep.config.previousEnabled || (step.config.priority > this.selectedStep.config.priority));\n  }\n\n  // Emits an event inidcating that the cancel button has been selected\n  private cancel(): void {\n    this.onCancel.emit({\n      index: this.stepIndex(this.selectedStep),\n      step: this.selectedStep\n    } as WizardEvent);\n    this.reset();\n  }\n\n  // Emits an event inidcating that all wizard steps and substeps have finished\n  private finish(): void {\n    this.onFinish.emit({\n      index: this.stepIndex(this.selectedStep),\n      step: this.selectedStep\n    } as WizardEvent);\n    this.reset();\n  }\n\n  // Navigate to the given substep\n  private goTo(step: WizardStep, goToFirstSubstep: boolean, goToLastSubstep: boolean): void {\n    if (step === undefined || this.config.done\n        || (!this.init && this.selectedStep !== undefined && !this.selectedStep.config.allowNavAway)) {\n      return;\n    }\n    if (this.init || (this.getStepIndex(step) < this.selectedStepIndex && this.selectedStep.previousEnabled)\n        || this.selectedStep.nextEnabled) {\n      this.unselectAll();\n      if (step.hasSubsteps && goToFirstSubstep) {\n        step.goToFirstStep();\n      } else if (step.hasSubsteps && goToLastSubstep) {\n        step.goToLastStep();\n      } else {\n        step.show(this.stepIndex(step));\n        this.stepChanged(step, this.stepIndex(step));\n      }\n      this.selectedStep = step;\n      step.selected = true;\n    }\n\n    if (!this.selectedStep.hasSubsteps) {\n      this.firstStep = this.stepIndex(this.selectedStep) === 0;\n    } else {\n      this.firstStep = this.stepIndex(this.selectedStep) === 0 && this.selectedStep.selectedStepIndex === 1;\n    }\n  }\n\n  // Initializes the first step based on the ready state and whether a current step has been provided\n  private initFirstStep(): void {\n    // Set currentStep equal to selected step title\n    if (this.config !== undefined && this.config.currentStep !== undefined\n        && !isEqual(this.config.currentStep, this.prevConfig.currentStep)\n        && (this.selectedStep !== undefined && this.selectedStep.config.title !== this.config.currentStep)) {\n      this.goTo(this.stepByTitle(this.config.currentStep), true, false);\n    } else {\n      let enabledSteps: WizardStep[] = this.getEnabledSteps();\n      this.goTo(enabledSteps[0], true, false);\n    }\n    this.init = false;\n  }\n\n  // Reset wizard state\n  private reset(): void {\n    // Traverse steps array and set each \"completed\" property to false\n    this.getEnabledSteps().forEach((step: WizardStep) => {\n      step.config.completed = false;\n    });\n    // Go to first step\n    this.goToStep(0, true);\n  }\n\n  // Handle step navigation\n  private stepClick(step: WizardStep): void {\n    if (step.config.allowClickNav) {\n      this.goTo(step, true, false);\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}