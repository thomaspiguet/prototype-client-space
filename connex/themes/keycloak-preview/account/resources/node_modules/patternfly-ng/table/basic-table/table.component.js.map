{"version":3,"file":"table.component.js","sourceRoot":"","sources":["../../../../build/src/app/table/basic-table/table.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { DragulaService } from 'ng2-dragula';\n\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\nimport { NgxDataTableConfig } from './ngx-datatable-config';\nimport { SortEvent } from '../../sort/sort-event';\nimport { TableConfig } from './table-config';\nimport { TableBase } from '../table-base';\nimport { TableEvent } from '../table-event';\n\nimport { clone, cloneDeep, defaults, isEqual } from 'lodash';\n\n/**\n * Table component.\n *\n * In order to use drag and drop, please include the following CSS file from ng2-dragula. For example:\n * <code>import 'dragula/dist/dragula.css';</code>\n *\n * For ngx-datatable options, see: https://swimlane.gitbooks.io/ngx-datatable/\n *\n * Note: The underlying ngx-datatable uses ContentChildren to retrieve DataTableColumnDirective (ngx-datatable-column)\n * tags. As a result of wrapping ngx-datatable, these objects are no longer direct descendents and ContentChildren\n * cannot retrieve them. A fix to ContentChildren may be in the works for Angular 5 or later.\n *\n * Instead of using ngx-datatable-column, table cells may be defined using templates, provided as the\n * columns cellTemplate property. For example:\n *\n * <code>\n * this.columns = [{\n *   cellTemplate: this.nameTemplate,\n *   prop: 'name',\n *   name: 'Name'\n * }]\n * </code>\n *\n * and\n *\n * <code>\n * &lt;ng-template #nameTemplate let-row=\"row\"&gt;\n *   &lt;span>{{row.name}}&lt;/span&gt;\n * &lt;/ng-template&gt;\n * </code>\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-table',\n  template: `<div class=\"pfng-table\"><pfng-toolbar [config]=\"config.toolbarConfig\" [actionTemplate]=\"actionTemplate\" (onActionSelect)=\"handleAction($event)\" (onFilterChange)=\"handleFilterChange($event)\" (onFilterFieldSelect)=\"handleFilterFieldSelect($event)\" (onFilterTypeAhead)=\"handleFilterTypeAhead($event)\" (onSortChange)=\"handleSortChange($event)\" (onViewSelect)=\"handleViewSelect($event)\" *ngIf=\"config.toolbarConfig !== undefined\"></pfng-toolbar><div *ngIf=\"hasData\"><ngx-datatable #datatable [columns]=\"cols\" [columnMode]=\"dataTableConfig.columnMode\" [count]=\"dataTableConfig.count\" [cssClasses]=\"dataTableConfig.cssClasses\" [displayCheck]=\"dataTableConfig.displayCheck\" [dragulaClassSelector]=\"'pfng-table-dnd-header'\" [dragulaModel]=\"rowsModel\" [dragulaName]=\"dragulaName\" [externalPaging]=\"dataTableConfig.externalPaging\" [externalSorting]=\"dataTableConfig.externalSorting\" [footerHeight]=\"dataTableConfig.footerHeight\" [groupExpansionDefault]=\"dataTableConfig.groupExpansionDefault\" [groupRowsBy]=\"dataTableConfig.groupRowsBy\" [headerHeight]=\"dataTableConfig.headerHeight\" [messages]=\"dataTableConfig.messages\" [ngClass]=\"config.styleClass\" [limit]=\"dataTableConfig.limit\" [loadingIndicator]=\"dataTableConfig.loadingIndicator\" [offset]=\"dataTableConfig.offset\" [reorderable]=\"dataTableConfig.reorderable\" [rowClass]=\"dataTableConfig.rowClass\" [rowHeight]=\"dataTableConfig.rowHeight\" [rowIdentity]=\"dataTableConfig.rowIdentity\" [rows]=\"rows\" [scrollbarH]=\"dataTableConfig.scrollbarH\" [scrollbarV]=\"dataTableConfig.scrollbarV\" [selectAllRowsOnPage]=\"dataTableConfig.selectAllRowsOnPage\" [selectCheck]=\"dataTableConfig.selectCheck\" [selected]=\"selectedRows\" [selectionType]=\"dataTableConfig.selectionType\" [sorts]=\"dataTableConfig.sorts\" [sortType]=\"dataTableConfig.sortType\" [trackByProp]=\"dataTableConfig.trackByProp\" [virtualization]=\"dataTableConfig.virtualization\" (activate)=\"handleActivate($event)\" (detailToggle)=\"handleDetailToggle($event)\" (dragulaDrop)=\"handleDragulaDrop($event)\" (dragulaDrag)=\"handleDragulaDrag($event)\" (page)=\"handlePage($event)\" (reorder)=\"handleReorder($event)\" (resize)=\"handleResize($event)\" (scroll)=\"handleScroll($event)\" (select)=\"handleSelect($event)\" (sort)=\"handleSort($event)\" (tableContextmenu)=\"handleOnTableContextMenu($event)\" *ngIf=\"showTable\"><ng-template #selectHeadTemplate><span class=\"margin-left-5\" *ngIf=\"config.dragEnabled === true\"></span> <span class=\"margin-left-16\" *ngIf=\"config.useExpandRows === true\"><span class=\"pfng-list-expand-placeholder\"></span> </span><input type=\"checkbox\" value=\"allRowsSelected\" title=\"{{(allRowsSelected) ? 'Deselect' : 'Select'}} All Rows\" [disabled]=\"rows === undefined || rows.length === 0\" [(ngModel)]=\"allRowsSelected\" (ngModelChange)=\"selectionsChange()\" *ngIf=\"config.showCheckbox === true\"></ng-template><ng-template #selectCellTemplate let-row=\"row\" let-expanded=\"expanded\"><span class=\"pfng-table-dnd-container\" *ngIf=\"config.dragEnabled === true\"><span class=\"pfng-table-dnd-header\"></span> </span><span [ngClass]=\"{'margin-left-5': config.dragEnabled === true}\" *ngIf=\"config.useExpandRows === true\"><span class=\"pfng-list-expand-placeholder\" *ngIf=\"row.hideExpandToggle === true\"></span> <span class=\"fa\" [ngClass]=\"{'fa-angle-down': expanded, 'fa-angle-right margin-right-4': !expanded}\" (click)=\"toggleExpandRow(row)\" *ngIf=\"row.hideExpandToggle !== true\"></span> </span><span [ngClass]=\"{'margin-left-5': config.dragEnabled === true || config.useExpandRows === true}\" *ngIf=\"config.showCheckbox === true\"><input type=\"checkbox\" value=\"row.selected\" title=\"{{(row.selected) ? 'Deselect' : 'Select'}} Row\" [(ngModel)]=\"row.selected\" (ngModelChange)=\"selectionChange(row)\"></span></ng-template><ngx-datatable-group-header [rowHeight]=\"dataTableConfig.rowHeight\" *ngIf=\"groupHeaderTemplate !== undefined\"><ng-template let-group=\"group\" let-expanded=\"expanded\" ngx-datatable-group-header-template><span class=\"margin-5\"><span class=\"fa\" [ngClass]=\"{'fa-angle-down': expanded, 'fa-angle-right margin-right-4': !expanded}\" (click)=\"toggleExpandGroup(group)\"></span></span><ng-template [ngTemplateOutlet]=\"groupHeaderTemplate\" [ngTemplateOutletContext]=\"{ group: group, expanded: expanded }\"></ng-template></ng-template></ngx-datatable-group-header><ngx-datatable-row-detail [rowHeight]=\"auto\" *ngIf=\"expandRowTemplate !== undefined\"><ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template><div class=\"pfng-table-expand-container\" tabindex=\"0\"><div class=\"pfng-table-expand-content\" style=\"flex-grow: 1\"><div class=\"close\" *ngIf=\"config.hideClose !== true\"><span class=\"pficon pficon-close\" (click)=\"toggleExpandRow(row)\"></span></div><ng-template [ngTemplateOutlet]=\"expandRowTemplate\" [ngTemplateOutletContext]=\"{ row: row, expanded: expanded }\"></ng-template></div></div></ng-template></ngx-datatable-row-detail></ngx-datatable><pfng-pagination [config]=\"config.paginationConfig\" (onPageNumberChange)=\"handlePageNumber($event)\" (onPageSizeChange)=\"handlePageSize($event)\" *ngIf=\"config.paginationConfig !== undefined\"></pfng-pagination></div><pfng-empty-state [config]=\"config.emptyStateConfig\" (onActionSelect)=\"handleAction($event)\" *ngIf=\"!hasData\"></pfng-empty-state></div>`\n})\nexport class TableComponent extends TableBase implements AfterViewInit, DoCheck, OnInit {\n  /**\n   * An array of items to display for table columns\n   */\n  @Input() columns: any[];\n\n  /**\n   * The table config containing component properties\n   */\n  @Input() config: TableConfig;\n\n  /**\n   * The ngx-datatable config containing component properties\n   */\n  @Input() dataTableConfig: NgxDataTableConfig;\n\n  /**\n   * The name of the template used with expanding rows\n   */\n  @Input() expandRowTemplate: TemplateRef<any>;\n\n  /**\n   * The name of the template used with group headers\n   */\n  @Input() groupHeaderTemplate: TemplateRef<any>;\n\n  /**\n   * The ngx-datatable event emitted when a cell or row was focused via keyboard or mouse click\n   */\n  @Input() rows: any[];\n\n  /**\n   * The ngx-datatable event emitted when a cell or row was focused via keyboard or mouse click\n   */\n  @Output('onActivate') onActivate = new EventEmitter();\n\n  /**\n   * The ngx-datatable event emitted when a row detail row was toggled\n   *\n   * Not applicable with pfng-table useExpandRows\n   */\n  @Output('onDetailToggle') onDetailToggle = new EventEmitter();\n\n  /**\n   * The ngx-datatable event emitted when a row detail row was toggled\n   *\n   * Not applicable with pfng-table paginationConfig\n   */\n  @Output('onPage') onPage = new EventEmitter();\n\n  /**\n   * The ngx-datatable event emitted when columns are re-ordered\n   */\n  @Output('onReorder') onReorder = new EventEmitter();\n\n  /**\n   * The ngx-datatable event emitted when a column is resized\n   */\n  @Output('onResize') onResize = new EventEmitter();\n\n  /**\n   * The ngx-datatable event emitted when a cell or row was selected\n   *\n   * Not applicable with pfng-table showCheckbox\n   */\n  @Output('onSelect') onSelect = new EventEmitter();\n\n  /**\n   * The ngx-datatable event emitted when body was scrolled (e.g., when scrollbarV is true)\n   */\n  @Output('onScroll') onScroll = new EventEmitter();\n\n  /**\n   * The ngx-datatable event emitted when a column header is sorted\n   */\n  @Output('onSort') onSort = new EventEmitter();\n\n  /**\n   * The ngx-datatable event emitted when a context menu is invoked on the table\n   */\n  @Output('onTableContextMenu') onTableContextMenu = new EventEmitter();\n\n  /**\n   * The event emitted when a row has been dragged\n   */\n  // @Output('onDrag') onDrag = new EventEmitter();\n\n  /**\n   * The event emitted when a row has been dropped\n   */\n  @Output('onDrop') onDrop = new EventEmitter();\n\n  @ViewChild('datatable') private _datatable: DatatableComponent;\n  @ViewChild('selectCellTemplate') private selectCellTemplate: TemplateRef<any>;\n  @ViewChild('selectHeadTemplate') private selectHeadTemplate: TemplateRef<any>;\n\n  private _allRowsSelected: boolean = false;\n  private _cols: any[];\n  private _selectedRows: any[];\n  private _showTable: boolean = true;\n\n  private defaultConfig = {\n    dragEnabled: false,\n    hideClose: false,\n    showCheckbox: false,\n    styleClass: 'patternfly',\n    useExpandRows: false\n  } as TableConfig;\n\n  private defaultDataTableConfig = {\n    columnMode: 'force',\n    cssClasses: {\n      sortAscending: 'datatable-icon-up',\n      sortDescending: 'datatable-icon-down',\n      pagerLeftArrow: 'datatable-icon-left',\n      pagerRightArrow: 'datatable-icon-right',\n      pagerPrevious: 'datatable-icon-prev',\n      pagerNext: 'datatable-icon-skip'\n    },\n    externalPaging: false,\n    externalSorting: false,\n    headerHeight: 50,\n    messages: { emptyMessage: 'No records found' },\n    offset: 0,\n    reorderable: true,\n    rowHeight: 'auto',\n    rowIdentity: ((x: any) => x),\n    scrollbarH: false,\n    scrollbarV: false,\n    sorts: [],\n    sortType: 'multi'\n  } as NgxDataTableConfig;\n\n  private dragulaName = 'newBag';\n  private prevConfig: TableConfig;\n  private prevDataTableConfig: NgxDataTableConfig;\n  private prevRows: any[];\n  private rowsModel: any[];\n\n  /**\n   * The default constructor\n   */\n  constructor(private dragulaService: DragulaService) {\n    super();\n  }\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon view initialization\n   */\n  ngAfterViewInit(): void {\n    // Reinitialize to include selection column cell/header templates\n    this.setupSelectionCols();\n  }\n\n  /**\n   *  Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n    this.setupSelectionCols(); // Initialize here for selection column width\n    this.setupDataTableConfig();\n  }\n\n  /**\n   *  Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      // Skip pagination and toolbar changes\n      if (!(this.hasPaginationChanged() || this.hasToolbarChanged())) {\n        this.setupSelectionCols();\n      }\n      this.setupConfig();\n    }\n    if (!isEqual(this.dataTableConfig, this.prevDataTableConfig)) {\n      this.setupDataTableConfig();\n    }\n    if (!isEqual(this.rows, this.prevRows)) {\n      this.rowsModel = [...this.rows];\n      this.initSelectedRows();\n      this.initAllRowsSelected();\n\n      // Disable toolbar actions\n      if (this.config.toolbarConfig !== undefined) {\n        this.config.toolbarConfig.disabled = !this.hasData;\n      }\n\n      // ngx-datatable recommends you force change detection -- issue #337\n      if (this.prevRows === undefined || this.prevRows.length === 0) {\n        setTimeout(() => {\n          this.setupSelectionCols();\n        }, 10);\n      }\n      this.prevRows = clone(this.rows); // lodash has issues deep cloning templates\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    // Disable toolbar actions\n    if (this.config.toolbarConfig !== undefined && !this.hasData) {\n      this.showTable = false;\n\n      // Filter and sort don't fully disable without this timeout\n      setTimeout(() => {\n        this.config.toolbarConfig.disabled = !this.hasData;\n        this.showTable = true;\n      }, 10);\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  /**\n   * Set up default ngx-datatable config\n   */\n  protected setupDataTableConfig(): void {\n    if (this.dataTableConfig !== undefined) {\n      defaults(this.dataTableConfig, this.defaultDataTableConfig);\n    } else {\n      this.dataTableConfig = cloneDeep(this.defaultDataTableConfig);\n    }\n    this.prevDataTableConfig = cloneDeep(this.dataTableConfig);\n  }\n\n  /**\n   * Set up selection columns\n   */\n  protected setupSelectionCols(): void {\n    let cellClass = '';\n    if (this.config.dragEnabled === true\n        && (this.config.useExpandRows !== true && this.config.showCheckbox !== true)) {\n      cellClass = 'pfng-table-dnd-only';\n    }\n\n    // ngx-datatable requires width property to become visible\n    let width = 0;\n    if (this.config.showCheckbox === true && this.config.useExpandRows === true && this.config.dragEnabled === true) {\n      width = 57;\n    } else if (this.config.showCheckbox === true && this.config.useExpandRows === true) {\n      width = 52;\n    } else if (this.config.showCheckbox === true && this.config.dragEnabled === true) {\n      width = 36;\n    } else if (this.config.useExpandRows === true && this.config.dragEnabled === true) {\n      width = 32;\n    } else if (this.config.showCheckbox === true) {\n      width = 34;\n    } else if (this.config.useExpandRows === true) {\n      width = 30;\n    } else if (this.config.dragEnabled === true) {\n      width = 10;\n    }\n\n    this._cols = [];\n    if (width > 0) {\n      this._cols.push({\n        canAutoResize: false,\n        cellClass: 'pfng-table-select ' + cellClass,\n        cellTemplate: this.selectCellTemplate,\n        headerClass: 'pfng-table-select ' + cellClass,\n        headerTemplate: this.selectHeadTemplate,\n        resizeable: false,\n        sortable: false,\n        width: width\n      });\n    }\n\n    this.columns.forEach((col) => {\n      this._cols.push(col);\n    });\n  }\n\n  // Accessors\n\n  /**\n   * Returns a flag indicating whether all visible rows are selected\n   *\n   * @returns {boolean} True if all visible rows are selected\n   */\n  get allRowsSelected(): boolean {\n    return (this.rows !== undefined && this.rows.length > 0) ? this._allRowsSelected : false;\n  }\n\n  /**\n   * Sets a flag indicating whether all visible rows are selected\n   *\n   * @param {boolean} selected True if all visible rows are selected\n   */\n  set allRowsSelected(selected: boolean) {\n    this._allRowsSelected = selected;\n    if (this.rows !== undefined) {\n      for (let i = 0; i < this.rows.length; i++) {\n        this.rows[i].selected = (selected === true) ? true : false;\n      }\n    }\n  }\n\n  /**\n   * Returns the columns used by the ngx-datatable component\n   *\n   * @returns {any[]} The ngx-datatable columns\n   */\n  protected get cols(): any[] {\n    return this._cols;\n  }\n\n  /**\n   * Returns the underlying ngx-datatable component\n   *\n   * @returns {DatatableComponent}\n   */\n  get datatable(): DatatableComponent {\n    return this._datatable;\n  }\n\n  /**\n   * Get the flag indicating table has data, including filtered rows\n   *\n   * @returns {boolean} True is the table has data\n   */\n  get hasData(): boolean {\n    let hasRows = (this.rows !== undefined && this.rows.length > 0);\n    let hasFilter = false;\n\n    if (this.config.appliedFilters !== undefined) {\n      hasFilter = (this.config.appliedFilters.length > 0);\n    } else if (this.config.toolbarConfig !== undefined\n        && this.config.toolbarConfig.filterConfig !== undefined\n        && this.config.toolbarConfig.filterConfig.appliedFilters !== undefined) {\n      hasFilter = (this.config.toolbarConfig.filterConfig.appliedFilters.length > 0);\n    }\n    return hasRows || hasFilter;\n  }\n\n  /**\n   * Returns the currently selected rows\n   *\n   * @returns {any[]} The selected rows\n   */\n  get selectedRows(): any[] {\n    return (this.dataTableConfig.selected !== undefined && this.config.showCheckbox !== true)\n      ? this.dataTableConfig.selected : this._selectedRows;\n  }\n\n  /**\n   * Sets the currently selected rows\n   *\n   * @param {any[]} selectedRows The selected rows\n   */\n  set selectedRows(selectedRows: any[]) {\n    if (selectedRows !== undefined) {\n      this._selectedRows = selectedRows;\n      if (this.config.toolbarConfig !== undefined && this.config.toolbarConfig.filterConfig !== undefined) {\n        this.config.toolbarConfig.filterConfig.selectedCount = this._selectedRows.length;\n      }\n    }\n  }\n\n  /**\n   * Returns flag indicating table is visible\n   *\n   * @returns {boolean} True if table is visible\n   */\n  protected get showTable(): boolean {\n    return this._showTable;\n  }\n\n  /**\n   * Set the flag indicating table is visible\n   *\n   * @param {boolean} visible True if table is visible\n   */\n  protected set showTable(visible: boolean) {\n    this._showTable = visible;\n  }\n\n  // Private\n\n  /**\n   * Helper to generate ngx-datatable activate event\n   */\n  private handleActivate($event: any): void {\n    this.onActivate.emit($event);\n  }\n\n  /**\n   * Helper to generate ngx-datatable detailToggle event\n   */\n  private handleDetailToggle($event: any): void {\n    this.onDetailToggle.emit($event);\n  }\n\n  // Todo: Not implemented yet\n  private handleDragulaDrag($event: any[]): void {\n    // this.onDrag.emit($event);\n  }\n\n  /**\n   * Helper to generate dragula drop event\n   *\n   * @param {any[]} $event\n   */\n  private handleDragulaDrop($event: any[]): void {\n    // ngx-datatable recommends you force change detection\n    this.showTable = false;\n    this.rows = [...$event];\n\n    setTimeout(() => {\n      this.onDrop.emit($event);\n      this.rowsModel = [...this.rows];\n      this.showTable = true;\n    }, 10);\n  }\n\n  /**\n   * Helper to generate ngx-datatable page event\n   */\n  private handlePage($event: any): void {\n    this.onPage.emit($event);\n  }\n\n  /**\n   * Helper to generate ngx-datatable reorder event\n   */\n  private handleReorder($event: any): void {\n    this.onReorder.emit($event);\n\n    // Save new order for drag and drop changes\n    let newCols = this.cols.slice();\n    newCols.splice($event.prevValue, 1);\n    newCols.splice($event.newValue, 0, $event.column);\n    this._cols = newCols;\n  }\n\n  /**\n   * Helper to generate ngx-datatable resize event\n   */\n  private handleResize($event: any): void {\n    this.onResize.emit($event);\n  }\n\n  /**\n   * Helper to generate ngx-datatable scroll event\n   */\n  private handleScroll($event: any): void {\n    this.onScroll.emit($event);\n  }\n\n  /**\n   * Helper to generate ngx-datatable select event\n   */\n  private handleSelect($event: any): void {\n    this.onSelect.emit($event);\n  }\n\n  /**\n   * Helper to generate ngx-datatable sort event\n   */\n  private handleSort($event: any): void {\n    this.onSort.emit($event);\n  }\n\n  /**\n   * Helper to generate ngx-datatable tableContextmenu event\n   */\n  private handleTableContextMenu($event: any): void {\n    this.onTableContextMenu.emit($event);\n  }\n\n  /**\n   * Helper to test if pagination config has changed\n   *\n   * @returns {boolean} True if pagination config has changed\n   */\n  private hasPaginationChanged(): boolean {\n    let change = (this.config.paginationConfig !== undefined && this.prevConfig.paginationConfig !== undefined\n      && !isEqual(this.config.paginationConfig, this.prevConfig.paginationConfig));\n    return change;\n  }\n\n  /**\n   * Helper to test if toolbar config has changed\n   *\n   * @returns {boolean} True if toolbar config has changed\n   */\n  private hasToolbarChanged(): boolean {\n    let change = (this.config.toolbarConfig !== undefined && this.prevConfig.toolbarConfig !== undefined\n      && !isEqual(this.config.toolbarConfig, this.prevConfig.toolbarConfig));\n    return change;\n  }\n\n  /**\n   * Helper to initialize de/select all control\n   */\n  private initAllRowsSelected(): void {\n    this._allRowsSelected = (this.selectedRows !== undefined && this.selectedRows.length === this.rows.length);\n  }\n\n  /**\n   * Helper to initialize selected rows\n   */\n  private initSelectedRows(): void {\n    let selected = [];\n    if (this.rows !== undefined) {\n      for (let i = 0; i < this.rows.length; i++) {\n        if (this.rows[i].selected) {\n          selected.push(this.rows[i]);\n        }\n      }\n    }\n    this.selectedRows = selected;\n  }\n\n  /**\n   * Helper to generate selection change event\n   *\n   * @param row The selected row\n   */\n  private selectionChange(row: any): void {\n    this.initSelectedRows();\n    this.initAllRowsSelected();\n    this.onSelectionChange.emit({\n      row: row,\n      selectedRows: this.selectedRows\n    } as TableEvent);\n  }\n\n  /**\n   * Helper to generate selection change event when all rows are selected\n   */\n  private selectionsChange(): void {\n    this.selectedRows = (this.allRowsSelected === true) ? this.rows : [];\n    this.onSelectionChange.emit({\n      selectedRows: this.selectedRows\n    } as TableEvent);\n  }\n\n  /**\n   * Helper to expand group\n   *\n   * @param group The group to expand\n   */\n  private toggleExpandGroup(group: any): void {\n    this.datatable.groupHeader.toggleExpandGroup(group);\n  }\n\n  /**\n   * Helper to expand row\n   *\n   * @param row The row to expand\n   */\n  private toggleExpandRow(row: any): void {\n    if (this.datatable.rowDetail !== undefined) {\n      this.datatable.rowDetail.toggleExpandRow(row);\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}