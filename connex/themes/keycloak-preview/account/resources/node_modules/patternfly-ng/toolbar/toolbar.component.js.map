{"version":3,"file":"toolbar.component.js","sourceRoot":"","sources":["../../../build/src/app/toolbar/toolbar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { cloneDeep, defaults, find, isEqual, remove } from 'lodash';\n\nimport { Action } from '../action/action';\nimport { Filter } from '../filter/filter';\nimport { FilterFieldsComponent } from '../filter/filter-fields.component';\nimport { FilterEvent } from '../filter/filter-event';\nimport { SortEvent } from '../sort/sort-event';\nimport { ToolbarConfig } from './toolbar-config';\nimport { ToolbarView } from './toolbar-view';\n\n/**\n * Toolbar component\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-toolbar',\n  template: `<div class=\"row toolbar-pf\"><div class=\"col-sm-12\"><form class=\"toolbar-pf-actions\" [ngClass]=\"{'no-filter-results': config.filterConfig?.resultsCount === 0 && config.filterConfig?.appliedFilters?.length !== 0}\" (submit)=\"$event.preventDefault()\"><div class=\"form-group toolbar-apf-filter\"><pfng-filter-fields [config]=\"config.filterConfig\" #filterFields (onAdd)=\"filterAdded($event)\" (onFieldSelect)=\"handleFilterFieldSelect($event)\" (onSave)=\"handleFilterSave($event)\" (onTypeAhead)=\"handleFilterTypeAhead($event)\" *ngIf=\"config.filterConfig?.fields\"></pfng-filter-fields></div><div class=\"form-group\" *ngIf=\"config.sortConfig?.fields && config.sortConfig?.visible !== false\"><pfng-sort [config]=\"config.sortConfig\" (onChange)=\"sortChange($event)\"></pfng-sort></div><div class=\"form-group toolbar-actions\" *ngIf=\"config.actionConfig !== undefined || actionTemplate !== undefined\"><pfng-action [config]=\"config.actionConfig\" [template]=\"actionTemplate\" (onActionSelect)=\"handleAction($event)\"></pfng-action></div><div class=\"toolbar-pf-action-right\"><div class=\"form-group toolbar-pf-view-selector\" *ngIf=\"viewTemplate !== undefined || (config.views)\"><ng-template [ngTemplateOutlet]=\"viewTemplate\" [ngTemplateOutletContext]=\"{}\"></ng-template><span *ngIf=\"config.views\"><button *ngFor=\"let view of config.views\" class=\"btn btn-link\" [ngClass]=\"{'active': isViewSelected(view), 'disabled': view.disabled === true}\" title=\"{{view.tooltip}}\" (click)=\"viewSelected(view)\"><i class=\"{{view.iconStyleClass}}\"></i></button></span></div></div></form><pfng-filter-results [config]=\"config.filterConfig\" (onClear)=\"clearFilter($event)\"></pfng-filter-results></div></div>`\n})\nexport class ToolbarComponent implements DoCheck, OnInit {\n  /**\n   * The toolbar config containing component properties\n   */\n  @Input() config: ToolbarConfig;\n\n  /**\n   * The name of the template containing actions\n   */\n  @Input() actionTemplate: TemplateRef<any>;\n\n  /**\n   * The name of the template containing views\n   */\n  @Input() viewTemplate: TemplateRef<any>;\n\n  /**\n   * The event emitted when an action (e.g., button, kebab, etc.) has been selected\n   */\n  @Output('onActionSelect') onActionSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a field menu option is selected\n   */\n  @Output('onFilterFieldSelect') onFilterFieldSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a filter has been changed\n   */\n  @Output('onFilterChange') onFilterChange = new EventEmitter();\n\n  /**\n   * The event emitted when a filter has been saved\n   */\n  @Output('onFilterSave') onFilterSave = new EventEmitter();\n\n  /**\n   * The event emitted when the user types ahead in the query input field\n   */\n  @Output('onFilterTypeAhead') onFilterTypeAhead = new EventEmitter();\n\n  /**\n   * The event emitted when the sort has changed\n   */\n  @Output('onSortChange') onSortChange = new EventEmitter();\n\n  /**\n   * The event emitted when a view has been selected\n   */\n  @Output('onViewSelect') onViewSelect = new EventEmitter();\n\n  @ViewChild('filterFields') private filterFields: FilterFieldsComponent;\n\n  private defaultConfig: ToolbarConfig = {\n    disabled: false\n  } as ToolbarConfig;\n  private prevConfig: ToolbarConfig;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n\n    if (this.config && this.config.filterConfig) {\n      this.config.filterConfig.disabled = this.config.disabled;\n      if (this.config.filterConfig.appliedFilters === undefined) {\n        this.config.filterConfig.appliedFilters = [];\n      }\n    }\n    if (this.config && this.config.sortConfig) {\n      this.config.sortConfig.disabled = this.config.disabled;\n      if (this.config.sortConfig.fields === undefined) {\n        this.config.sortConfig.fields = [];\n      }\n    }\n    if (this.config.sortConfig !== undefined && this.config.sortConfig.visible === undefined) {\n      this.config.sortConfig.visible = true;\n    }\n    if (this.config && this.config.views === undefined) {\n      this.config.views = [];\n    }\n    if (this.config && this.config.view === undefined) {\n      this.config.view = this.config.views[0];\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  // Actions\n\n  /**\n   * Handle clear filter event\n   *\n   * @param $event An array of current Filter objects\n   */\n  clearFilter($event: Filter[]): void {\n    this.config.filterConfig.appliedFilters = $event;\n    this.onFilterChange.emit({\n      appliedFilters: $event\n    } as FilterEvent);\n  }\n\n  /**\n   * Reset current field and value\n   */\n  resetFilterField() {\n    if (this.filterFields !== undefined) {\n      this.filterFields.reset();\n    }\n  }\n\n  // Private\n\n  private filterAdded($event: FilterEvent): void {\n    let newFilter = {\n      field: $event.field,\n      query: $event.query,\n      value: $event.value\n    } as Filter;\n\n    if (!this.filterExists(newFilter)) {\n      if (newFilter.field.type === 'select') {\n        this.enforceSingleSelect(newFilter);\n      }\n      this.config.filterConfig.appliedFilters.push(newFilter);\n      $event.appliedFilters = this.config.filterConfig.appliedFilters;\n      this.onFilterChange.emit($event);\n    }\n  }\n\n  private filterExists(filter: Filter): boolean {\n    let foundFilter = find(this.config.filterConfig.appliedFilters, {\n      field: filter.field,\n      query: filter.query,\n      value: filter.value\n    });\n    return foundFilter !== undefined;\n  }\n\n  private handleAction(action: Action): void {\n    if (action && action.disabled !== true) {\n      this.onActionSelect.emit(action);\n    }\n  }\n\n  private handleFilterFieldSelect($event: FilterEvent): void {\n    this.onFilterFieldSelect.emit($event);\n  }\n\n  private handleFilterSave($event: FilterEvent) {\n    this.onFilterSave.emit($event);\n  }\n\n  private handleFilterTypeAhead($event: FilterEvent) {\n    this.onFilterTypeAhead.emit($event);\n  }\n\n  private sortChange($event: SortEvent): void {\n    this.onSortChange.emit($event);\n  }\n\n  private isViewSelected(currentView: ToolbarView): boolean {\n    return this.config.view && this.config.view.id === currentView.id;\n  }\n\n  private viewSelected(currentView: ToolbarView): void {\n    this.config.view = currentView;\n    if (!currentView.disabled) {\n      this.onViewSelect.emit(currentView);\n    }\n  }\n\n  // Utils\n\n  private enforceSingleSelect(filter: Filter): void {\n    remove(this.config.filterConfig.appliedFilters, { title: filter.field.title });\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}